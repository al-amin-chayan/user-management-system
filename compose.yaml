services:
  nginx:
    container_name: nginx
    image: nginx:1.24
    ports:
      - ${APP_EXPOSE_PORT:-8080}:80
    volumes:
      - ./:/var/www
      - ./.docker/nginx/nginx.conf:/etc/nginx/conf.d/default.conf
    depends_on:
      - app
    networks:
      - ums-net

  app:
    container_name: ums-app
    build:
      context: ./.docker/app
      args:
        - PHP_VERSION=${PHP_VERSION:-8.3-fpm}
        - UID=${UID:-10001}
        - GID=${GID:-10001}
    image: ums-app:latest
    depends_on:
      db:
        condition: service_healthy
    env_file:
      - .env
    volumes:
      - ./:/var/www
    networks:
      - ums-net

  db:
    container_name: ums-db
    image: mariadb:10.6
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: ${DB_ROOT_PASSWORD:-secret}
      MYSQL_USER: ${DB_USER:-ums}
      MYSQL_PASSWORD: ${DB_PASSWORD:-secret}
      MYSQL_DATABASE: ${DB_DATABASE:-ums_db}
    expose:
      - ${DB_EXPOSE_PORT:-3306}
    volumes:
      - ./storage/db-data:/var/lib/mysql
      - ./.docker/mariadb/ums.sql:/docker-entrypoint-initdb.d/1.sql
    healthcheck:
      test: [ "CMD", "healthcheck.sh", "--su-mysql", "--connect", "--innodb_initialized" ]
      start_period: 1m
      start_interval: 10s
      interval: 10s
      timeout: 5s
      retries: 3
    networks:
      - ums-net

  adminer:
    container_name: adminer
    image: adminer:latest
    restart: always
    environment:
      ADMINER_DEFAULT_SERVER: db
      ADMINER_DESIGN: galkaev
    ports:
      - ${ADMINER_PORT:-8888}:8080
    networks:
      - ums-net
    
networks:
  ums-net:
    driver: bridge
